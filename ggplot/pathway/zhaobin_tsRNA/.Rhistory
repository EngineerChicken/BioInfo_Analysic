library("FactoMineR")
install.packages("FactoMineR")
library("FactoMineR")
library("FactoMineR")
res.pca <- PCA(decathlon2.active, graph = FALSE)
print(res.pca)
library("FactoMineR")
library("factoextra")
install.packages("factoextra")
library("factoextra")
install.packages("ggplot2")
library("factoextra")
?("ggplot2")
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6], 4)
t=data("decathlon2")
t
t=data(decathlon2)
t
print(t)
mode(decathlon2)
mode(decathlon2.active)
decathlon2.active
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6], 4)
library("FactoMineR")
library("FactoMineR")
res.pca <- PCA(decathlon2.active, graph = FALSE)
View(res.pca)
View(res.pca)
print(res.pca)
library("factoextra")
eig.val <- get_eigenvalue(res.pca)
eig.val
library("factoextra")
eig.val <- get_eigenvalue(res.pca)
eig.val
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
head(var$coord, 4)
var <- get_pca_var(res.pca)
var
# Coordinates
head(var$coord)
# Cos2: quality on the factore map
head(var$cos2)
# Contributions to the principal components
head(var$contrib)
head(var$coord, 4)
fviz_pca_var(res.pca, col.var = "black")
res.pca
View(res.pca)
head(var$cos2, 4)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
pca_file=read.table("daidawei_pca_data.txt",header=T)
pca_file=read.table("./R_Workspace/daidawei_pca_data.txt",header=T)
pca_file
data <- decathlon2[1:142, 3:8]
data
remove(data)
library("FactoMineR")
library("factoextra")
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
#head(decathlon2.active[, 1:6], 4)
library("FactoMineR")
res.pca <- PCA(decathlon2.active, graph = FALSE)
library("factoextra")
eig.val <- get_eigenvalue(res.pca)
#1
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(res.pca)
head(var$coord)
# Cos2: quality on the factore map
head(var$cos2)
# Contributions to the principal components
head(var$contrib)
head(var$coord, 4)
fviz_pca_var(res.pca, col.var = "black")
library("FactoMineR")
library("factoextra")
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6], 4)
library("FactoMineR")
library("factoextra")
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:7], 4)
library("FactoMineR")
library("factoextra")
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6], 4)
library("FactoMineR")
library("factoextra")
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, , 4)
head(pca_file[,1:6,4])
head(pca_file[,1:7,4])
res2.pca <- PCA(pca_file, graph = FALSE)
pca_file.active <- pca_file[1:765, 1:7]
head(pca_file.active[, 1:6], 4)
head(pca_file.active[, 1:7], 4)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6], 4)
head(pca_file.active[, 2:7], 4)
pca_file.active <- pca_file[1:765, 2:7]
res2.pca <- PCA(pca_file.active, graph = FALSE)
eig.val <- get_eigenvalue(res2.pca)
fviz_eig(res2.pca, addlabels = TRUE, ylim = c(0, 50))
fviz_eig(res2.pca, addlabels = TRUE, ylim = c(0, 100))
fviz_pca_var(res2.pca, col.var = "black")
setwd("~/R_Workspace/pathway/zhaobin_tsRNA")
#install.packages("ggplot2")
library(ggplot2)
pathway = read.table("zhaobin_tsRNA_pathway.txt",header=T,sep="\t")
pp = ggplot(pathway,aes(richFactor,PathwayTerm))
pp + geom_point()
pp + geom_point(aes(size=DifGene))
pbubble = pp + geom_point(aes(size=DifGene,color=-1*log10(P_Value)))
pbubble + scale_colour_gradient(low="green",high="red")
pr = pbubble + scale_colour_gradient(low="green",high="red") + labs(color=expression(-log[10](P_Value)),size="Gene number",x="Rich factor",y="Pathway name",title="Top20 of pathway enrichment")
pr + theme_bw()
ggsave("out.pdf")
ggsave("out.png")
ggsave("out2.png",width=4,height=4)
